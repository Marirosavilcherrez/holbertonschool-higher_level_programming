"""
A class BaseGeometry with 2 instance methods
	
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

TEST:

>>> bg = BaseGeometry()
>>> bg.integer_validator("Hi", 12)


>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("number", 0)
Traceback (most recent call last):
ValueError: number must be greater than 0

>>> bg.integer_validator("number", "4")
Traceback (most recent call last):
TypeError: number must be an integer

>>> bg.integer_validator("number", -7)
Traceback (most recent call last):
ValueError: number must be greater than 0

>>> bg.integer_validator("number", (4,))
Traceback (most recent call last):
TypeError: number must be an integer

>>> bg.integer_validator("number", [3])
Traceback (most recent call last):
TypeError: number must be an integer

>>> bg.integer_validator("number", True)

>>> bg.integer_validator("number", {3, 4})
Traceback (most recent call last):
TypeError: number must be an integer

>>> bg.integer_validator("number", None)
Traceback (most recent call last):
TypeError: number must be an integer
